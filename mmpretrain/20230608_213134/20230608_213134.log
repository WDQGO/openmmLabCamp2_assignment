2023/06/08 21:31:36 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.16 (main, Mar  8 2023, 10:39:24) [MSC v.1916 64 bit (AMD64)]
    CUDA available: True
    numpy_random_seed: 207559985
    GPU 0: NVIDIA GeForce RTX 3080
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2
    NVCC: Cuda compilation tools, release 11.2, V11.2.152
    MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.29.30146 版
    GCC: n/a
    PyTorch: 2.0.1+cu117
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 193431937
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2+cu117
    OpenCV: 4.7.0
    MMEngine: 0.7.3

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/08 21:31:37 - mmengine - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=18,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=30,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)),
    init_cfg=dict(
        type='Pretrained',
        checkpoint=
        'https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth'
    ))
dataset_type = 'CustomDataset'
data_preprocessor = dict(
    num_classes=1000,
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', scale=224),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='PackInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='ResizeEdge', scale=256, edge='short'),
    dict(type='CenterCrop', crop_size=224),
    dict(type='PackInputs')
]
train_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='E:\\dataSetCollect\\fruit30_split\\train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', scale=224),
            dict(type='RandomFlip', prob=0.5, direction='horizontal'),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=True))
val_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='E:\\dataSetCollect\\fruit30_split\\val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
val_evaluator = dict(type='Accuracy', topk=(1, 3))
test_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='E:\\dataSetCollect\\fruit30_split\\val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
test_evaluator = dict(type='Accuracy', topk=(1, 3))
optim_wrapper = dict(
    optimizer=dict(
        type='AdamW',
        lr=0.0001,
        weight_decay=0.0001,
        eps=1e-08,
        betas=(0.9, 0.999)))
train_cfg = dict(by_epoch=True, max_epochs=10, val_interval=1)
val_cfg = dict()
test_cfg = dict()
auto_scale_lr = dict(base_batch_size=256)
default_scope = 'mmpretrain'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=20),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=1, save_best='auto', max_keep_ckpts=3),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='VisualizationHook', enable=False))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[dict(type='LocalVisBackend')])
log_level = 'INFO'
load_from = None
resume = False
randomness = dict(seed=None, deterministic=False)
launcher = 'none'
work_dir = './work_dirs/myfruits'

2023/06/08 21:31:38 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/08 21:31:38 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/08 21:31:40 - mmengine - INFO - load model from: https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth
2023/06/08 21:31:40 - mmengine - INFO - Loads checkpoint by http backend from path: https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth
2023/06/08 21:31:40 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for head.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([30, 512]).
size mismatch for head.fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([30]).
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet18_8xb32_in1k_20210831-fbbb1da6.pth 

head.fc.weight - torch.Size([30, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([30]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/06/08 21:31:40 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/08 21:31:40 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/08 21:31:40 - mmengine - INFO - Checkpoints will be saved to D:\ACpycharm\myProjeycs\mmpretrain-main\tools\work_dirs\myfruits.
2023/06/08 21:31:55 - mmengine - INFO - Epoch(train)  [1][ 20/137]  lr: 1.0000e-04  eta: 0:16:42  time: 0.1039  data_time: 0.0746  memory: 865  loss: 2.9292
2023/06/08 21:31:56 - mmengine - INFO - Epoch(train)  [1][ 40/137]  lr: 1.0000e-04  eta: 0:09:05  time: 0.0830  data_time: 0.0536  memory: 865  loss: 2.3724
2023/06/08 21:31:58 - mmengine - INFO - Epoch(train)  [1][ 60/137]  lr: 1.0000e-04  eta: 0:06:32  time: 0.0761  data_time: 0.0467  memory: 865  loss: 1.9007
2023/06/08 21:31:59 - mmengine - INFO - Epoch(train)  [1][ 80/137]  lr: 1.0000e-04  eta: 0:05:12  time: 0.0666  data_time: 0.0374  memory: 865  loss: 1.5990
2023/06/08 21:32:01 - mmengine - INFO - Epoch(train)  [1][100/137]  lr: 1.0000e-04  eta: 0:04:28  time: 0.0827  data_time: 0.0536  memory: 865  loss: 1.2974
2023/06/08 21:32:03 - mmengine - INFO - Epoch(train)  [1][120/137]  lr: 1.0000e-04  eta: 0:03:59  time: 0.1100  data_time: 0.0810  memory: 865  loss: 1.2477
2023/06/08 21:32:04 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:04 - mmengine - INFO - Saving checkpoint at 1 epochs
2023/06/08 21:32:05 - mmengine - WARNING - `save_param_scheduler` is True but `self.param_schedulers` is None, so skip saving parameter schedulers
2023/06/08 21:32:17 - mmengine - INFO - Epoch(val)  [1][20/34]    eta: 0:00:08  time: 0.0583  data_time: 0.0474  memory: 865  
2023/06/08 21:32:18 - mmengine - INFO - Epoch(val) [1][34/34]    accuracy/top1: 82.0965  accuracy/top3: 95.3618  data_time: 0.3566  time: 0.3753
2023/06/08 21:32:18 - mmengine - INFO - The best checkpoint with 82.0965 accuracy/top1 at 1 epoch is saved to best_accuracy_top1_epoch_1.pth.
2023/06/08 21:32:19 - mmengine - INFO - Epoch(train)  [2][ 20/137]  lr: 1.0000e-04  eta: 0:03:15  time: 0.0301  data_time: 0.0006  memory: 865  loss: 0.9041
2023/06/08 21:32:20 - mmengine - INFO - Epoch(train)  [2][ 40/137]  lr: 1.0000e-04  eta: 0:02:54  time: 0.0298  data_time: 0.0007  memory: 865  loss: 0.8666
2023/06/08 21:32:20 - mmengine - INFO - Epoch(train)  [2][ 60/137]  lr: 1.0000e-04  eta: 0:02:38  time: 0.0299  data_time: 0.0005  memory: 865  loss: 0.7642
2023/06/08 21:32:21 - mmengine - INFO - Epoch(train)  [2][ 80/137]  lr: 1.0000e-04  eta: 0:02:24  time: 0.0297  data_time: 0.0005  memory: 865  loss: 0.8752
2023/06/08 21:32:22 - mmengine - INFO - Epoch(train)  [2][100/137]  lr: 1.0000e-04  eta: 0:02:12  time: 0.0301  data_time: 0.0004  memory: 865  loss: 0.7022
2023/06/08 21:32:22 - mmengine - INFO - Epoch(train)  [2][120/137]  lr: 1.0000e-04  eta: 0:02:02  time: 0.0300  data_time: 0.0007  memory: 865  loss: 0.7604
2023/06/08 21:32:23 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:23 - mmengine - INFO - Saving checkpoint at 2 epochs
2023/06/08 21:32:24 - mmengine - INFO - Epoch(val)  [2][20/34]    eta: 0:00:00  time: 0.0148  data_time: 0.0043  memory: 865  
2023/06/08 21:32:24 - mmengine - INFO - Epoch(val) [2][34/34]    accuracy/top1: 87.0130  accuracy/top3: 96.8460  data_time: 0.0056  time: 0.0163
2023/06/08 21:32:24 - mmengine - INFO - The previous best checkpoint D:\ACpycharm\myProjeycs\mmpretrain-main\tools\work_dirs\myfruits\best_accuracy_top1_epoch_1.pth is removed
2023/06/08 21:32:25 - mmengine - INFO - The best checkpoint with 87.0130 accuracy/top1 at 2 epoch is saved to best_accuracy_top1_epoch_2.pth.
2023/06/08 21:32:25 - mmengine - INFO - Epoch(train)  [3][ 20/137]  lr: 1.0000e-04  eta: 0:01:48  time: 0.0297  data_time: 0.0004  memory: 865  loss: 0.6896
2023/06/08 21:32:26 - mmengine - INFO - Epoch(train)  [3][ 40/137]  lr: 1.0000e-04  eta: 0:01:41  time: 0.0300  data_time: 0.0007  memory: 865  loss: 0.6243
2023/06/08 21:32:26 - mmengine - INFO - Epoch(train)  [3][ 60/137]  lr: 1.0000e-04  eta: 0:01:35  time: 0.0297  data_time: 0.0006  memory: 865  loss: 0.6437
2023/06/08 21:32:27 - mmengine - INFO - Epoch(train)  [3][ 80/137]  lr: 1.0000e-04  eta: 0:01:29  time: 0.0299  data_time: 0.0005  memory: 865  loss: 0.6156
2023/06/08 21:32:28 - mmengine - INFO - Epoch(train)  [3][100/137]  lr: 1.0000e-04  eta: 0:01:25  time: 0.0300  data_time: 0.0004  memory: 865  loss: 0.6277
2023/06/08 21:32:28 - mmengine - INFO - Epoch(train)  [3][120/137]  lr: 1.0000e-04  eta: 0:01:20  time: 0.0295  data_time: 0.0005  memory: 865  loss: 0.4818
2023/06/08 21:32:29 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:29 - mmengine - INFO - Saving checkpoint at 3 epochs
2023/06/08 21:32:30 - mmengine - INFO - Epoch(val)  [3][20/34]    eta: 0:00:00  time: 0.0152  data_time: 0.0045  memory: 865  
2023/06/08 21:32:30 - mmengine - INFO - Epoch(val) [3][34/34]    accuracy/top1: 90.7236  accuracy/top3: 97.4954  data_time: 0.0058  time: 0.0162
2023/06/08 21:32:30 - mmengine - INFO - The previous best checkpoint D:\ACpycharm\myProjeycs\mmpretrain-main\tools\work_dirs\myfruits\best_accuracy_top1_epoch_2.pth is removed
2023/06/08 21:32:30 - mmengine - INFO - The best checkpoint with 90.7236 accuracy/top1 at 3 epoch is saved to best_accuracy_top1_epoch_3.pth.
2023/06/08 21:32:31 - mmengine - INFO - Epoch(train)  [4][ 20/137]  lr: 1.0000e-04  eta: 0:01:13  time: 0.0298  data_time: 0.0005  memory: 865  loss: 0.4551
2023/06/08 21:32:32 - mmengine - INFO - Epoch(train)  [4][ 40/137]  lr: 1.0000e-04  eta: 0:01:09  time: 0.0300  data_time: 0.0008  memory: 865  loss: 0.4366
2023/06/08 21:32:32 - mmengine - INFO - Epoch(train)  [4][ 60/137]  lr: 1.0000e-04  eta: 0:01:06  time: 0.0297  data_time: 0.0006  memory: 865  loss: 0.4543
2023/06/08 21:32:33 - mmengine - INFO - Epoch(train)  [4][ 80/137]  lr: 1.0000e-04  eta: 0:01:03  time: 0.0299  data_time: 0.0005  memory: 865  loss: 0.4864
2023/06/08 21:32:34 - mmengine - INFO - Epoch(train)  [4][100/137]  lr: 1.0000e-04  eta: 0:01:00  time: 0.0298  data_time: 0.0004  memory: 865  loss: 0.4695
2023/06/08 21:32:34 - mmengine - INFO - Epoch(train)  [4][120/137]  lr: 1.0000e-04  eta: 0:00:58  time: 0.0299  data_time: 0.0006  memory: 865  loss: 0.5705
2023/06/08 21:32:35 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:35 - mmengine - INFO - Saving checkpoint at 4 epochs
2023/06/08 21:32:36 - mmengine - INFO - Epoch(val)  [4][20/34]    eta: 0:00:00  time: 0.0157  data_time: 0.0048  memory: 865  
2023/06/08 21:32:36 - mmengine - INFO - Epoch(val) [4][34/34]    accuracy/top1: 90.4453  accuracy/top3: 97.7737  data_time: 0.0062  time: 0.0165
2023/06/08 21:32:37 - mmengine - INFO - Epoch(train)  [5][ 20/137]  lr: 1.0000e-04  eta: 0:00:53  time: 0.0301  data_time: 0.0005  memory: 865  loss: 0.4976
2023/06/08 21:32:37 - mmengine - INFO - Epoch(train)  [5][ 40/137]  lr: 1.0000e-04  eta: 0:00:51  time: 0.0299  data_time: 0.0004  memory: 865  loss: 0.3557
2023/06/08 21:32:38 - mmengine - INFO - Epoch(train)  [5][ 60/137]  lr: 1.0000e-04  eta: 0:00:49  time: 0.0302  data_time: 0.0007  memory: 865  loss: 0.3458
2023/06/08 21:32:38 - mmengine - INFO - Epoch(train)  [5][ 80/137]  lr: 1.0000e-04  eta: 0:00:46  time: 0.0300  data_time: 0.0007  memory: 865  loss: 0.3471
2023/06/08 21:32:39 - mmengine - INFO - Epoch(train)  [5][100/137]  lr: 1.0000e-04  eta: 0:00:44  time: 0.0297  data_time: 0.0003  memory: 865  loss: 0.3977
2023/06/08 21:32:40 - mmengine - INFO - Epoch(train)  [5][120/137]  lr: 1.0000e-04  eta: 0:00:43  time: 0.0300  data_time: 0.0006  memory: 865  loss: 0.4548
2023/06/08 21:32:40 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:40 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/06/08 21:32:41 - mmengine - INFO - Epoch(val)  [5][20/34]    eta: 0:00:00  time: 0.0149  data_time: 0.0044  memory: 865  
2023/06/08 21:32:41 - mmengine - INFO - Epoch(val) [5][34/34]    accuracy/top1: 90.9091  accuracy/top3: 98.1447  data_time: 0.0056  time: 0.0159
2023/06/08 21:32:42 - mmengine - INFO - The previous best checkpoint D:\ACpycharm\myProjeycs\mmpretrain-main\tools\work_dirs\myfruits\best_accuracy_top1_epoch_3.pth is removed
2023/06/08 21:32:42 - mmengine - INFO - The best checkpoint with 90.9091 accuracy/top1 at 5 epoch is saved to best_accuracy_top1_epoch_5.pth.
2023/06/08 21:32:43 - mmengine - INFO - Epoch(train)  [6][ 20/137]  lr: 1.0000e-04  eta: 0:00:39  time: 0.0302  data_time: 0.0006  memory: 865  loss: 0.3537
2023/06/08 21:32:43 - mmengine - INFO - Epoch(train)  [6][ 40/137]  lr: 1.0000e-04  eta: 0:00:38  time: 0.0301  data_time: 0.0007  memory: 865  loss: 0.2750
2023/06/08 21:32:44 - mmengine - INFO - Epoch(train)  [6][ 60/137]  lr: 1.0000e-04  eta: 0:00:36  time: 0.0299  data_time: 0.0006  memory: 865  loss: 0.2977
2023/06/08 21:32:44 - mmengine - INFO - Epoch(train)  [6][ 80/137]  lr: 1.0000e-04  eta: 0:00:34  time: 0.0300  data_time: 0.0004  memory: 865  loss: 0.3253
2023/06/08 21:32:45 - mmengine - INFO - Epoch(train)  [6][100/137]  lr: 1.0000e-04  eta: 0:00:33  time: 0.0298  data_time: 0.0003  memory: 865  loss: 0.3561
2023/06/08 21:32:46 - mmengine - INFO - Epoch(train)  [6][120/137]  lr: 1.0000e-04  eta: 0:00:31  time: 0.0302  data_time: 0.0005  memory: 865  loss: 0.3956
2023/06/08 21:32:46 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:46 - mmengine - INFO - Saving checkpoint at 6 epochs
2023/06/08 21:32:47 - mmengine - INFO - Epoch(val)  [6][20/34]    eta: 0:00:00  time: 0.0156  data_time: 0.0053  memory: 865  
2023/06/08 21:32:48 - mmengine - INFO - Epoch(val) [6][34/34]    accuracy/top1: 90.3525  accuracy/top3: 97.4026  data_time: 0.0061  time: 0.0162
2023/06/08 21:32:48 - mmengine - INFO - Epoch(train)  [7][ 20/137]  lr: 1.0000e-04  eta: 0:00:29  time: 0.0306  data_time: 0.0008  memory: 865  loss: 0.3325
2023/06/08 21:32:49 - mmengine - INFO - Epoch(train)  [7][ 40/137]  lr: 1.0000e-04  eta: 0:00:27  time: 0.0303  data_time: 0.0006  memory: 865  loss: 0.3036
2023/06/08 21:32:49 - mmengine - INFO - Epoch(train)  [7][ 60/137]  lr: 1.0000e-04  eta: 0:00:26  time: 0.0300  data_time: 0.0003  memory: 865  loss: 0.3360
2023/06/08 21:32:50 - mmengine - INFO - Epoch(train)  [7][ 80/137]  lr: 1.0000e-04  eta: 0:00:25  time: 0.0301  data_time: 0.0006  memory: 865  loss: 0.2653
2023/06/08 21:32:51 - mmengine - INFO - Epoch(train)  [7][100/137]  lr: 1.0000e-04  eta: 0:00:23  time: 0.0311  data_time: 0.0007  memory: 865  loss: 0.2967
2023/06/08 21:32:51 - mmengine - INFO - Epoch(train)  [7][120/137]  lr: 1.0000e-04  eta: 0:00:22  time: 0.0302  data_time: 0.0008  memory: 865  loss: 0.3432
2023/06/08 21:32:52 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:52 - mmengine - INFO - Saving checkpoint at 7 epochs
2023/06/08 21:32:53 - mmengine - INFO - Epoch(val)  [7][20/34]    eta: 0:00:00  time: 0.0145  data_time: 0.0040  memory: 865  
2023/06/08 21:32:53 - mmengine - INFO - Epoch(val) [7][34/34]    accuracy/top1: 91.6512  accuracy/top3: 97.7737  data_time: 0.0058  time: 0.0159
2023/06/08 21:32:53 - mmengine - INFO - The previous best checkpoint D:\ACpycharm\myProjeycs\mmpretrain-main\tools\work_dirs\myfruits\best_accuracy_top1_epoch_5.pth is removed
2023/06/08 21:32:53 - mmengine - INFO - The best checkpoint with 91.6512 accuracy/top1 at 7 epoch is saved to best_accuracy_top1_epoch_7.pth.
2023/06/08 21:32:54 - mmengine - INFO - Epoch(train)  [8][ 20/137]  lr: 1.0000e-04  eta: 0:00:20  time: 0.0300  data_time: 0.0003  memory: 865  loss: 0.2769
2023/06/08 21:32:55 - mmengine - INFO - Epoch(train)  [8][ 40/137]  lr: 1.0000e-04  eta: 0:00:19  time: 0.0301  data_time: 0.0003  memory: 865  loss: 0.2237
2023/06/08 21:32:55 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:55 - mmengine - INFO - Epoch(train)  [8][ 60/137]  lr: 1.0000e-04  eta: 0:00:17  time: 0.0299  data_time: 0.0005  memory: 865  loss: 0.2650
2023/06/08 21:32:56 - mmengine - INFO - Epoch(train)  [8][ 80/137]  lr: 1.0000e-04  eta: 0:00:16  time: 0.0301  data_time: 0.0004  memory: 865  loss: 0.3481
2023/06/08 21:32:57 - mmengine - INFO - Epoch(train)  [8][100/137]  lr: 1.0000e-04  eta: 0:00:15  time: 0.0300  data_time: 0.0006  memory: 865  loss: 0.2040
2023/06/08 21:32:57 - mmengine - INFO - Epoch(train)  [8][120/137]  lr: 1.0000e-04  eta: 0:00:14  time: 0.0300  data_time: 0.0007  memory: 865  loss: 0.3381
2023/06/08 21:32:58 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:32:58 - mmengine - INFO - Saving checkpoint at 8 epochs
2023/06/08 21:32:59 - mmengine - INFO - Epoch(val)  [8][20/34]    eta: 0:00:00  time: 0.0149  data_time: 0.0045  memory: 865  
2023/06/08 21:32:59 - mmengine - INFO - Epoch(val) [8][34/34]    accuracy/top1: 91.4657  accuracy/top3: 97.6809  data_time: 0.0058  time: 0.0161
2023/06/08 21:33:00 - mmengine - INFO - Epoch(train)  [9][ 20/137]  lr: 1.0000e-04  eta: 0:00:12  time: 0.0300  data_time: 0.0003  memory: 865  loss: 0.2143
2023/06/08 21:33:00 - mmengine - INFO - Epoch(train)  [9][ 40/137]  lr: 1.0000e-04  eta: 0:00:11  time: 0.0299  data_time: 0.0005  memory: 865  loss: 0.2619
2023/06/08 21:33:01 - mmengine - INFO - Epoch(train)  [9][ 60/137]  lr: 1.0000e-04  eta: 0:00:10  time: 0.0299  data_time: 0.0004  memory: 865  loss: 0.2164
2023/06/08 21:33:02 - mmengine - INFO - Epoch(train)  [9][ 80/137]  lr: 1.0000e-04  eta: 0:00:09  time: 0.0301  data_time: 0.0005  memory: 865  loss: 0.2041
2023/06/08 21:33:02 - mmengine - INFO - Epoch(train)  [9][100/137]  lr: 1.0000e-04  eta: 0:00:08  time: 0.0300  data_time: 0.0007  memory: 865  loss: 0.2009
2023/06/08 21:33:03 - mmengine - INFO - Epoch(train)  [9][120/137]  lr: 1.0000e-04  eta: 0:00:07  time: 0.0300  data_time: 0.0004  memory: 865  loss: 0.3209
2023/06/08 21:33:03 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:33:03 - mmengine - INFO - Saving checkpoint at 9 epochs
2023/06/08 21:33:04 - mmengine - INFO - Epoch(val)  [9][20/34]    eta: 0:00:00  time: 0.0146  data_time: 0.0044  memory: 865  
2023/06/08 21:33:05 - mmengine - INFO - Epoch(val) [9][34/34]    accuracy/top1: 92.2078  accuracy/top3: 98.2375  data_time: 0.0063  time: 0.0164
2023/06/08 21:33:05 - mmengine - INFO - The previous best checkpoint D:\ACpycharm\myProjeycs\mmpretrain-main\tools\work_dirs\myfruits\best_accuracy_top1_epoch_7.pth is removed
2023/06/08 21:33:05 - mmengine - INFO - The best checkpoint with 92.2078 accuracy/top1 at 9 epoch is saved to best_accuracy_top1_epoch_9.pth.
2023/06/08 21:33:06 - mmengine - INFO - Epoch(train) [10][ 20/137]  lr: 1.0000e-04  eta: 0:00:05  time: 0.0297  data_time: 0.0003  memory: 865  loss: 0.2520
2023/06/08 21:33:06 - mmengine - INFO - Epoch(train) [10][ 40/137]  lr: 1.0000e-04  eta: 0:00:04  time: 0.0299  data_time: 0.0006  memory: 865  loss: 0.2184
2023/06/08 21:33:07 - mmengine - INFO - Epoch(train) [10][ 60/137]  lr: 1.0000e-04  eta: 0:00:03  time: 0.0300  data_time: 0.0004  memory: 865  loss: 0.2930
2023/06/08 21:33:08 - mmengine - INFO - Epoch(train) [10][ 80/137]  lr: 1.0000e-04  eta: 0:00:02  time: 0.0299  data_time: 0.0006  memory: 865  loss: 0.2924
2023/06/08 21:33:08 - mmengine - INFO - Epoch(train) [10][100/137]  lr: 1.0000e-04  eta: 0:00:01  time: 0.0304  data_time: 0.0009  memory: 865  loss: 0.2115
2023/06/08 21:33:09 - mmengine - INFO - Epoch(train) [10][120/137]  lr: 1.0000e-04  eta: 0:00:00  time: 0.0300  data_time: 0.0004  memory: 865  loss: 0.2319
2023/06/08 21:33:09 - mmengine - INFO - Exp name: Aresnet_fruits_20230608_213134
2023/06/08 21:33:09 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/08 21:33:10 - mmengine - INFO - Epoch(val) [10][20/34]    eta: 0:00:00  time: 0.0150  data_time: 0.0046  memory: 865  
2023/06/08 21:33:11 - mmengine - INFO - Epoch(val) [10][34/34]    accuracy/top1: 91.5584  accuracy/top3: 97.8664  data_time: 0.0059  time: 0.0160
